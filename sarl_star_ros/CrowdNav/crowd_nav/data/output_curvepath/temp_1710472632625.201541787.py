# -*- coding: utf-8 -*-
"""Script

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1E3XZ6GUXeTlqpc9WMQ9bcN0kE_MDfA2n
"""

import re
from collections import defaultdict

file_path = '/home/heisenberg0702/different_scenarios/temp_1710472615089.1020815743/curvepath/output.log'

env_values_latest_file = defaultdict(lambda: defaultdict(list))

with open(file_path, 'r') as file:
    current_env_latest_file = None
    for line in file:
        env_match_latest = re.search(r"simulation environment: (\w+)", line)
        if env_match_latest:
            current_env_latest_file = env_match_latest.group(1)

        if current_env_latest_file:
            for match in re.finditer(pattern, line):
                key, value = match.groups()
                env_values_latest_file[current_env_latest_file][key].append(float(value))

combined_averages_latest = {'Dynamic': defaultdict(list), 'Mixed': defaultdict(list), 'Static': defaultdict(list), 'No': defaultdict(list)}

for env, metrics in env_values_latest_file.items():
    if env in dynamic_envs:
        category = 'Dynamic'
    elif env in mixed_envs:
        category = 'Mixed'
    else:
        category = env.capitalize()

    for key, values in metrics.items():
        combined_averages_latest[category][key].extend(values)

final_averages_combined_latest = {
    category: {key: calculate_weighted_average(values) for key, values in metrics.items()}
    for category, metrics in combined_averages_latest.items()
}

print(final_averages_combined_latest)